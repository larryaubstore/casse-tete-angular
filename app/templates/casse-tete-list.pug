include mixins/errorpanel.pug

.container-fluid
  .row
    .col-md-2



      label(for="inputRow")='# of rows'
      .input-group
        input( id="inputRow", data-slider-id='ex1Slider', type="text", data-slider-min="0", data-slider-max="60", data-slider-step="1", data-slider-value="20")
       
      label(for="inputMargin")='Margin'
      .input-group
        input( id="inputMargin", data-slider-id='exMarginSlider', type="text", data-slider-min="0", data-slider-max="30", data-slider-step="1", data-slider-value="9")

      label.invisible(for="inputWidth")='Tile width'
      .input-group.invisible
        input( id="inputWidth", data-slider-id='exWidthSlider', type="text", data-slider-min="0", data-slider-max="300", data-slider-step="5", data-slider-value="150")

      label.invisible(for="inputHeight")='Tile height'
      .input-group.invisible
        input( id="inputHeight", data-slider-id='exHeightSlider', type="text", data-slider-min="0", data-slider-max="300", data-slider-step="5", data-slider-value="105")

      label(for="inputScale")='Scale'
      .input-group
        input( id="inputScale", data-slider-id='exScaleSlider', type="text", data-slider-min="0", data-slider-max="300", data-slider-step="5", data-slider-value="50")

      h1
        span.label.label-danger([style.display]="countererrors > 0  ? 'block' : 'none'")='{{countererrors}}'
      h1
        span.label.label-success([style.display]="countererrors <= 0 ? 'block' : 'none'")='{{countererrors}}'
      // +errorpanel(0)
      //
      button#noborder(type='button' class='btn btn-info')='Sans bordure'

    .col-md-10
      #puzzle.invisible(style='margin: 0 auto;height:100%;overflow:hidden;', [style.width]="getTotalWidth()")
        .tilewrapper
          .position
            //div( *ngFor="let puzzle of puzzles")
            casse-tete(*ngFor="let puzzle of puzzles", [puzzle]="puzzle", [parent]="me")
              .loader.centerdiv
            //  casse-tete([puzzle]="puzzle")
            //
            //

//#vignettes(style='width:990px;margin: 0 auto;')
//  vignette(*ngFor="let vignette of vignettes", [vignette]="vignette")
